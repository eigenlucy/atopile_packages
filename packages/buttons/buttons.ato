import Resistor, ElectricSignal


module NoButton:
    """
    Its a little confusing how this works, but the idea is that you might optionally want a button input your design.
    To achieve this with our current compiler, we need an empty module 'NoButon' (Normally Open) that can be
    replaced using the '->' operator with another module that has a button. FOr example the 'ButtonSKRPACE010'.

    Usage example:
    import ButtonPullup from generics/buttons.ato
    import ButtonSKRPACE010 from generics/buttons.ato

    module MyMicrocontroller:
        ...
        btn_pullup = new ButtonPullup
        ...

    module MyProject:
        ...
        micro = new MyMicrocontroller #instantiate microcontroller (in this case there will be no button input your design)
        button_pullup.btn -> ButtonSKRPACE010 #replace with class, now there will be a button input your design.
    """
    signal input
    signal out


component _ButtonSKRPACE010:
    signal input ~ pin 1
    input ~ pin 2
    signal out ~ pin 3
    out ~ pin 4
    footprint = "KEY-SMD_4P-L4.2-W3.2-P2.20-LS4.6"
    lcsc_id = "C139797"


module ButtonSKRPACE010 from NoButton:
    btn = new _ButtonSKRPACE010
    input ~ btn.input
    out ~ btn.out


component _ButtonSKTDLDE010:
    input ~ pin 1
    out ~ pin 2
    signal anchor ~ pin 3
    anchor ~ pin 4

    footprint = "KEY-SMD_SKTDLDE010"
    lcsc_id = "C115365"


module ButtonSKTDLDE010 from NoButton:
    """
    Small SMD right angle button
    """
    btn = new _ButtonSKTDLDE010
    input ~ btn.input
    out ~ btn.out


module ButtonPullup:
    btn = new NoButton
    output = new ElectricSignal
    pullup = new Resistor

    pullup.resistance = 10kohms +/- 20%
    pullup.package = "R0402"

    output.reference.hv ~ pullup.p1; pullup.p2 ~ btn.input; btn.out ~ output.reference.gnd


module ButtonPulldown:
    btn = new NoButton
    output = new ElectricSignal
    pulldown = new Resistor
    pulldown.resistance = 10kohms +/- 20%
    pulldown.package = "R0402"

    output.reference.gnd ~ pulldown.p1; pulldown.p2 ~ btn.input; btn.out ~ output.reference.hv


module ButtonPullup90Degree from ButtonPullup:
    btn -> _1TS003B_1400_3500A


component _1TS003B_1400_3500A:
    footprint = "KEY-SMD_1TS003B"
    lcsc_id = "C319392"

    # pins
    signal _1 ~ pin 1
    signal _2 ~ pin 2
    signal _3 ~ pin 3
    signal _4 ~ pin 4

    signal input ~ _1
    signal out ~ _2
